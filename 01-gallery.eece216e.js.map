{"mappings":"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","sources":["node_modules/simplelightbox/src/simple-lightbox.js"],"sourcesContent":["class SimpleLightbox {\n\n    defaultOptions = {\n        sourceAttr: 'href',\n        overlay: true,\n        overlayOpacity: 0.7,\n        spinner: true,\n        nav: true,\n        navText: ['&lsaquo;', '&rsaquo;'],\n        captions: true,\n        captionDelay: 0,\n        captionSelector: 'img',\n        captionType: 'attr',\n        captionsData: 'title',\n        captionPosition: 'bottom',\n        captionClass: '',\n        close: true,\n        closeText: '&times;',\n        swipeClose: true,\n        showCounter: true,\n        fileExt: 'png|jpg|jpeg|gif|webp',\n        animationSlide: true,\n        animationSpeed: 250,\n        preloading: true,\n        enableKeyboard: true,\n        loop: true,\n        rel: false,\n        docClose: true,\n        swipeTolerance: 50,\n        className: 'simple-lightbox',\n        widthRatio: 0.8,\n        heightRatio: 0.9,\n        scaleImageToRatio: false,\n        disableRightClick: false,\n        disableScroll: true,\n        alertError: true,\n        alertErrorMessage: 'Image not found, next image will be loaded',\n        additionalHtml: false,\n        history: true,\n        throttleInterval: 0,\n        doubleTapZoom: 2,\n        maxZoom: 10,\n        htmlClass: 'has-lightbox',\n        rtl: false,\n        fixedClass: 'sl-fixed',\n        fadeSpeed: 300,\n        uniqueImages: true,\n        focus: true,\n        scrollZoom: true,\n        scrollZoomFactor: 0.5,\n        download: false\n    };\n\n    transitionPrefix;\n    isPassiveEventsSupported;\n    transitionCapable = false;\n\n    isTouchDevice = ('ontouchstart' in window);\n    isAppleDevice = /(Mac|iPhone|iPod|iPad)/i.test(navigator.platform);\n\n    initialLocationHash;\n\n    pushStateSupport = ('pushState' in history);\n\n    isOpen = false;\n    isAnimating = false;\n    isClosing = false;\n    isFadeIn = false;\n    urlChangedOnce = false;\n    hashReseted = false;\n    historyHasChanges = false;\n    historyUpdateTimeout = null;\n\n    currentImage;\n    eventNamespace = 'simplelightbox';\n    domNodes = {};\n\n    loadedImages = [];\n    initialImageIndex = 0;\n    currentImageIndex = 0;\n\n    initialSelector = null;\n    globalScrollbarWidth = 0;\n\n    controlCoordinates = {\n        swipeDiff: 0,\n        swipeYDiff: 0,\n        swipeStart: 0,\n        swipeEnd: 0,\n        swipeYStart: 0,\n        swipeYEnd: 0,\n        mousedown: false,\n        imageLeft: 0,\n        zoomed: false,\n        containerHeight: 0,\n        containerWidth: 0,\n        containerOffsetX: 0,\n        containerOffsetY: 0,\n        imgHeight: 0,\n        imgWidth: 0,\n        capture: false,\n        initialOffsetX: 0,\n        initialOffsetY: 0,\n        initialPointerOffsetX: 0,\n        initialPointerOffsetY: 0,\n        initialPointerOffsetX2: 0,\n        initialPointerOffsetY2: 0,\n        initialScale: 1,\n        initialPinchDistance: 0,\n        pointerOffsetX: 0,\n        pointerOffsetY: 0,\n        pointerOffsetX2: 0,\n        pointerOffsetY2: 0,\n        targetOffsetX: 0,\n        targetOffsetY: 0,\n        targetScale: 0,\n        pinchOffsetX: 0,\n        pinchOffsetY: 0,\n        limitOffsetX: 0,\n        limitOffsetY: 0,\n        scaleDifference: 0,\n        targetPinchDistance: 0,\n        touchCount: 0,\n        doubleTapped: false,\n        touchmoveCount: 0\n    };\n\n    constructor(elements, options) {\n\n        this.options = Object.assign(this.defaultOptions, options);\n        this.isPassiveEventsSupported = this.checkPassiveEventsSupport();\n\n        if (typeof elements === 'string') {\n            this.initialSelector = elements;\n            this.elements = Array.from(document.querySelectorAll(elements));\n        } else {\n            this.elements = ((typeof elements.length !== 'undefined') && elements.length > 0) ? Array.from(elements) : [elements];\n        }\n\n        this.relatedElements = [];\n\n        this.transitionPrefix = this.calculateTransitionPrefix();\n        this.transitionCapable = this.transitionPrefix !== false;\n        this.initialLocationHash = this.hash;\n\n        // this should be handled by attribute selector IMHO! => 'a[rel=bla]'...\n        if (this.options.rel) {\n            this.elements = this.getRelated(this.options.rel);\n        }\n\n        if (this.options.uniqueImages) {\n            let imgArr = [];\n            this.elements = Array.from(this.elements).filter(\n                element => {\n                    let src = element.getAttribute(this.options.sourceAttr);\n                    if(imgArr.indexOf(src) === -1) {\n                        imgArr.push(src);\n                        return true;\n                    }\n                    return false;\n                }\n            );\n        }\n\n        this.createDomNodes();\n\n        if (this.options.close) {\n            this.domNodes.wrapper.appendChild(this.domNodes.closeButton);\n        }\n\n        if (this.options.nav) {\n            this.domNodes.wrapper.appendChild(this.domNodes.navigation);\n        }\n\n        if (this.options.spinner) {\n            this.domNodes.wrapper.appendChild(this.domNodes.spinner);\n        }\n\n        this.addEventListener(this.elements, 'click.' + this.eventNamespace, (event) => {\n\n            if (this.isValidLink(event.currentTarget)) {\n                event.preventDefault();\n                if (this.isAnimating) {\n                    return false;\n                }\n\n                this.initialImageIndex = this.elements.indexOf(event.currentTarget);\n                this.openImage(event.currentTarget);\n            }\n        });\n\n        // close addEventListener click addEventListener doc\n        if (this.options.docClose) {\n            this.addEventListener(this.domNodes.wrapper, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], (event) => {\n                if (this.isOpen && event.target === event.currentTarget) {\n                    this.close();\n                }\n            });\n        }\n\n        // disable rightclick\n        if (this.options.disableRightClick) {\n            this.addEventListener(document.body, 'contextmenu.' + this.eventNamespace, (event) => {\n                if (event.target.parentElement.classList.contains(\"sl-image\")) {\n                    event.preventDefault();\n                }\n            });\n        }\n\n        // keyboard-control\n        if (this.options.enableKeyboard) {\n            this.addEventListener(document.body, 'keyup.' + this.eventNamespace, this.throttle((event) => {\n                this.controlCoordinates.swipeDiff = 0;\n                // keyboard control only if lightbox is open\n\n                if (this.isAnimating && event.key === 'Escape') {\n                    this.currentImage.setAttribute('src', '');\n                    this.isAnimating = false;\n                    this.close();\n                    return;\n                }\n\n                if (this.isOpen) {\n                    event.preventDefault();\n                    if (event.key === 'Escape') {\n                        this.close();\n                    }\n                    if(!this.isAnimating && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) > -1) {\n                      this.loadImage(event.key === 'ArrowRight' ? 1 : -1);\n                    }\n                }\n            }, this.options.throttleInterval));\n        }\n\n        this.addEvents();\n    }\n\n    checkPassiveEventsSupport() {\n        // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n        // Test via a getter in the options object to see if the passive property is accessed\n        let supportsPassive = false;\n        try {\n            let opts = Object.defineProperty({}, 'passive', {\n                get: function() {\n                    supportsPassive = true;\n                }\n            });\n            window.addEventListener(\"testPassive\", null, opts);\n            window.removeEventListener(\"testPassive\", null, opts);\n        } catch (e) {}\n        return supportsPassive;\n    }\n\n    getCaptionElement(elem) {\n        // look at sibling selector\n        if( this.options.captionSelector.startsWith('+')) {\n            let selector = this.options.captionSelector.replace(/^\\+/, '').trimStart();\n            let sibling = elem.nextElementSibling;\n            if(sibling.matches(selector)) {\n                return sibling;\n            }\n            return false;\n        }\n        else if( this.options.captionSelector.startsWith('>') ) {\n            let selector = this.options.captionSelector.replace(/^>/, '').trimStart();\n            return elem.querySelector(selector);\n        }\n        else {\n            return elem.querySelector(this.options.captionSelector);\n        }\n    }\n\n    generateQuerySelector(elem) {\n        const {\n            tagName,\n            id,\n            className,\n            parentNode\n        } = elem;\n\n        if (tagName === 'HTML') return 'HTML';\n\n        let str = tagName;\n\n        str += (id !== '') ? `#${id}` : '';\n\n        if (className) {\n            const classes = className.trim().split(/\\s/);\n            for (let i = 0; i < classes.length; i++) {\n                str += `.${classes[i]}`;\n            }\n        }\n\n        let childIndex = 1;\n\n        for (let e = elem; e.previousElementSibling; e = e.previousElementSibling) {\n            childIndex += 1;\n        }\n\n        str += `:nth-child(${childIndex})`;\n\n        return `${this.generateQuerySelector(parentNode)} > ${str}`;\n    }\n\n    createDomNodes() {\n        this.domNodes.overlay = document.createElement('div');\n        this.domNodes.overlay.classList.add('sl-overlay');\n        this.domNodes.overlay.dataset.opacityTarget = this.options.overlayOpacity;\n\n        this.domNodes.closeButton = document.createElement('button');\n        this.domNodes.closeButton.classList.add('sl-close');\n        this.domNodes.closeButton.innerHTML = this.options.closeText;\n\n        this.domNodes.spinner = document.createElement('div');\n        this.domNodes.spinner.classList.add('sl-spinner');\n        this.domNodes.spinner.innerHTML = '<div></div>';\n\n        this.domNodes.navigation = document.createElement('div');\n        this.domNodes.navigation.classList.add('sl-navigation');\n        this.domNodes.navigation.innerHTML = `<button class=\"sl-prev\">${this.options.navText[0]}</button><button class=\"sl-next\">${this.options.navText[1]}</button>`;\n\n        this.domNodes.counter = document.createElement('div');\n        this.domNodes.counter.classList.add('sl-counter');\n        this.domNodes.counter.innerHTML = '<span class=\"sl-current\"></span>/<span class=\"sl-total\"></span>';\n\n        this.domNodes.download = document.createElement('div');\n        this.domNodes.download.classList.add('sl-download');\n\n        this.domNodes.downloadLink = document.createElement('a');\n        this.domNodes.downloadLink.setAttribute('download', '');\n        this.domNodes.downloadLink.textContent = this.options.download;\n\n        this.domNodes.download.appendChild(this.domNodes.downloadLink);\n\n        this.domNodes.caption = document.createElement('div');\n        this.domNodes.caption.classList.add('sl-caption', 'pos-' + this.options.captionPosition);\n        if (this.options.captionClass) {\n            let captionClasses = this.options.captionClass.split(/[\\s,]+/);\n            this.domNodes.caption.classList.add(...captionClasses);\n        }\n\n        this.domNodes.image = document.createElement('div');\n        this.domNodes.image.classList.add('sl-image');\n\n        this.domNodes.wrapper = document.createElement('div');\n        this.domNodes.wrapper.classList.add('sl-wrapper');\n        this.domNodes.wrapper.setAttribute('tabindex',-1);\n        this.domNodes.wrapper.setAttribute('role','dialog');\n        this.domNodes.wrapper.setAttribute('aria-hidden',false);\n        if (this.options.className) {\n            this.domNodes.wrapper.classList.add(this.options.className);\n        }\n        if(this.options.rtl) {\n            this.domNodes.wrapper.classList.add('sl-dir-rtl');\n        }\n    }\n\n    throttle(func, limit) {\n        let inThrottle;\n        return function () {\n            if (!inThrottle) {\n                func.apply(this, arguments);\n                inThrottle = true;\n                setTimeout(function () {\n                    return inThrottle = false;\n                }, limit);\n            }\n        };\n    }\n\n    isValidLink(element) {\n        return (!this.options.fileExt) || (element.getAttribute(this.options.sourceAttr) && new RegExp('(' + this.options.fileExt + ')($|\\\\?.*$)', 'i').test(element.getAttribute(this.options.sourceAttr)));\n    }\n\n    calculateTransitionPrefix() {\n        let s = (document.body || document.documentElement).style;\n\n        return 'transition' in s ? '' :\n            'WebkitTransition' in s ? '-webkit-' :\n                'MozTransition' in s ? '-moz-' :\n                    'OTransition' in s ? '-o' :\n                        false;\n    }\n\n    getScrollbarWidth() {\n        let scrollbarWidth = 0;\n        let scrollDiv = document.createElement('div');\n        scrollDiv.classList.add('sl-scrollbar-measure');\n\n        document.body.appendChild(scrollDiv);\n        scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        document.body.removeChild(scrollDiv);\n        return scrollbarWidth;\n    }\n\n    toggleScrollbar(type) {\n        let scrollbarWidth = 0;\n        let fixedElements =  [].slice.call(document.querySelectorAll('.'+this.options.fixedClass))\n        if (type === 'hide') {\n            let fullWindowWidth = window.innerWidth;\n            if (!fullWindowWidth) {\n                let documentElementRect = document.documentElement.getBoundingClientRect();\n                fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n            }\n            if (document.body.clientWidth < fullWindowWidth || this.isAppleDevice) {\n                let paddingRight = parseInt(window.getComputedStyle(document.body).paddingRight || 0, 10);\n                scrollbarWidth = this.getScrollbarWidth();\n                document.body.dataset.originalPaddingRight = paddingRight;\n                if (scrollbarWidth > 0 || (scrollbarWidth == 0 && this.isAppleDevice)) {\n                    document.body.classList.add('hidden-scroll');\n                    document.body.style.paddingRight = (paddingRight + scrollbarWidth) + 'px';\n\n                    fixedElements.forEach(element => {\n                        const actualPadding = element.style.paddingRight\n                        const calculatedPadding = window.getComputedStyle(element)['padding-right']\n                        element.dataset.originalPaddingRight = actualPadding;\n                        element.style.paddingRight = `${parseFloat(calculatedPadding) + scrollbarWidth}px`\n                    });\n\n                }\n            }\n        } else {\n            document.body.classList.remove('hidden-scroll');\n            document.body.style.paddingRight = document.body.dataset.originalPaddingRight + 'px';\n\n            fixedElements.forEach(element => {\n                const padding = element.dataset.originalPaddingRight;\n                if (typeof padding !== 'undefined') {\n                    element.style.paddingRight = padding\n                }\n            });\n        }\n        return scrollbarWidth;\n    }\n\n    close() {\n        if (!this.isOpen || this.isAnimating || this.isClosing) {\n            return false;\n        }\n\n        this.isClosing = true;\n        let element = this.relatedElements[this.currentImageIndex];\n        element.dispatchEvent(new Event('close.simplelightbox'));\n\n        if (this.options.history) {\n            this.historyHasChanges = false;\n            if(!this.hashReseted) {\n                this.resetHash();\n            }\n        }\n\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n\n        this.fadeOut(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeOut(document.querySelectorAll('.sl-image img,  .sl-close, .sl-navigation, .sl-image .sl-caption, .sl-counter'), this.options.fadeSpeed, () => {\n            if (this.options.disableScroll) {\n                this.toggleScrollbar('show');\n            }\n\n            if (this.options.htmlClass && this.options.htmlClass !== '') {\n                document.querySelector('html').classList.remove(this.options.htmlClass);\n            }\n\n            document.body.removeChild(this.domNodes.wrapper);\n            if(this.options.overlay) {\n                document.body.removeChild(this.domNodes.overlay);\n            }\n            this.domNodes.additionalHtml = null;\n            this.domNodes.download = null;\n\n            element.dispatchEvent(new Event('closed.simplelightbox'));\n\n            this.isClosing = false;\n        });\n\n        this.currentImage = null;\n        this.isOpen = false;\n        this.isAnimating = false;\n\n        // reset touchcontrol coordinates\n        for (let key in this.controlCoordinates) {\n            this.controlCoordinates[key] = 0;\n        }\n        this.controlCoordinates.mousedown = false;\n        this.controlCoordinates.zoomed = false;\n        this.controlCoordinates.capture = false;\n        this.controlCoordinates.initialScale = this.minMax(1, 1, this.options.maxZoom);\n        this.controlCoordinates.doubleTapped = false;\n    }\n\n    get hash() {\n        return window.location.hash.substring(1);\n    }\n\n    preload() {\n        let index = this.currentImageIndex,\n            length = this.relatedElements.length,\n            next = (index + 1 < 0) ? length - 1 : (index + 1 >= length - 1) ? 0 : index + 1,\n            prev = (index - 1 < 0) ? length - 1 : (index - 1 >= length - 1) ? 0 : index - 1,\n            nextImage = new Image(),\n            prevImage = new Image();\n\n        nextImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) { //is this condition even required... setting multiple times will not change usage...\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('nextImageLoaded.' + this.eventNamespace));\n        });\n        nextImage.setAttribute('src', this.relatedElements[next].getAttribute(this.options.sourceAttr));\n\n        prevImage.addEventListener('load', (event) => {\n            let src = event.target.getAttribute('src');\n            if (this.loadedImages.indexOf(src) === -1) {\n                this.loadedImages.push(src);\n            }\n            this.relatedElements[index].dispatchEvent(new Event('prevImageLoaded.' + this.eventNamespace));\n        });\n        prevImage.setAttribute('src', this.relatedElements[prev].getAttribute(this.options.sourceAttr));\n    }\n\n    loadImage(direction) {\n        let slideDirection = direction;\n        if(this.options.rtl) {\n            direction = -direction;\n        }\n\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('change.' + this.eventNamespace));\n        this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'next' : 'prev') + '.' + this.eventNamespace));\n\n        let newIndex = this.currentImageIndex + direction;\n\n        if (this.isAnimating || (newIndex < 0 || newIndex >= this.relatedElements.length) && this.options.loop === false) {\n            return false;\n        }\n\n        this.currentImageIndex = (newIndex < 0) ? this.relatedElements.length - 1 : (newIndex > this.relatedElements.length - 1) ? 0 : newIndex;\n\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n\n\n        if (this.options.animationSlide) {\n            this.slide(this.options.animationSpeed / 1000, (-100 * slideDirection) - this.controlCoordinates.swipeDiff + 'px');\n        }\n        this.fadeOut(this.domNodes.image, this.options.fadeSpeed, () => {\n            this.isAnimating = true;\n            if(!this.isClosing) {\n                setTimeout(() => {\n                    let element = this.relatedElements[this.currentImageIndex];\n                    if(!this.currentImage) return;\n                    this.currentImage.setAttribute('src', element.getAttribute(this.options.sourceAttr));\n\n                    if (this.loadedImages.indexOf(element.getAttribute(this.options.sourceAttr)) === -1) {\n                        this.show(this.domNodes.spinner);\n                    }\n\n                    if(this.domNodes.image.contains(this.domNodes.caption)) {\n                      this.domNodes.image.removeChild(this.domNodes.caption);\n                    }\n\n                    this.adjustImage(slideDirection);\n                    if (this.options.preloading) this.preload();\n                }, 100);\n            } else {\n                this.isAnimating = false;\n            }\n        });\n    }\n\n    adjustImage(direction) {\n        if (!this.currentImage) {\n            return false;\n        }\n\n        let tmpImage = new Image(),\n            windowWidth = window.innerWidth * this.options.widthRatio,\n            windowHeight = window.innerHeight * this.options.heightRatio;\n\n        tmpImage.setAttribute('src', this.currentImage.getAttribute('src'));\n\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n        this.zoomPanElement(0, 0, 1);\n\n        tmpImage.addEventListener('error', (event) => {\n            this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('error.' + this.eventNamespace));\n            this.isAnimating = false;\n            this.isOpen = true;\n            this.domNodes.spinner.style.display = 'none';\n\n            let dirIsDefined = direction === 1 || direction === -1;\n            if (this.initialImageIndex === this.currentImageIndex && dirIsDefined) {\n                return this.close();\n            }\n\n            if (this.options.alertError) {\n                alert(this.options.alertErrorMessage);\n            }\n\n            this.loadImage(dirIsDefined ? direction : 1);\n        });\n\n\n        tmpImage.addEventListener('load', (event) => {\n            if (typeof direction !== 'undefined') {\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event('changed.' + this.eventNamespace));\n                this.relatedElements[this.currentImageIndex].dispatchEvent(new Event((direction === 1 ? 'nextDone' : 'prevDone') + '.' + this.eventNamespace));\n            }\n\n            // history\n            if (this.options.history) {\n                this.updateURL();\n            }\n\n            if (this.loadedImages.indexOf(this.currentImage.getAttribute('src')) === -1) {\n                this.loadedImages.push(this.currentImage.getAttribute('src'));\n            }\n\n            let imageWidth = event.target.width,\n                imageHeight = event.target.height;\n\n            if (this.options.scaleImageToRatio || imageWidth > windowWidth || imageHeight > windowHeight) {\n                let ratio = imageWidth / imageHeight > windowWidth / windowHeight ? imageWidth / windowWidth : imageHeight / windowHeight;\n                imageWidth /= ratio;\n                imageHeight /= ratio;\n            }\n\n            this.domNodes.image.style.top = (window.innerHeight - imageHeight) / 2 + 'px';\n            this.domNodes.image.style.left = (window.innerWidth - imageWidth - this.globalScrollbarWidth) / 2 + 'px';\n            this.domNodes.image.style.width = imageWidth + 'px';\n            this.domNodes.image.style.height = imageHeight + 'px';\n\n            this.domNodes.spinner.style.display = 'none';\n            if( this.options.focus ) {\n                this.forceFocus();\n            }\n            this.fadeIn(this.currentImage, this.options.fadeSpeed, () => {\n                if( this.options.focus ) {\n                    this.domNodes.wrapper.focus();\n                }\n            });\n\n            this.isOpen = true;\n\n            let captionContainer,\n                captionText;\n\n            if (typeof this.options.captionSelector === 'string') {\n                captionContainer = this.options.captionSelector === 'self'\n                    ? this.relatedElements[this.currentImageIndex]\n                    : this.getCaptionElement(this.relatedElements[this.currentImageIndex]);\n            } else if (typeof this.options.captionSelector === 'function') {\n                captionContainer = this.options.captionSelector(this.relatedElements[this.currentImageIndex]);\n            }\n\n            if(this.options.captions && captionContainer) {\n                if (this.options.captionType === 'data') {\n                    captionText = captionContainer.dataset[this.options.captionsData];\n                } else if (this.options.captionType === 'text') {\n                    captionText = captionContainer.innerHTML;\n                } else {\n                    captionText = captionContainer.getAttribute(this.options.captionsData);\n                }\n            }\n\n            if (!this.options.loop) {\n                if (this.currentImageIndex === 0) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex >= this.relatedElements.length - 1) {\n                    this.hide(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n                if (this.currentImageIndex > 0) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-prev'));\n                }\n                if (this.currentImageIndex < this.relatedElements.length - 1) {\n                    this.show(this.domNodes.navigation.querySelector('.sl-next'));\n                }\n            } else {\n                if (this.relatedElements.length === 1) {\n                    this.hide(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                } else {\n                    this.show(this.domNodes.navigation.querySelectorAll('.sl-prev, .sl-next'));\n                }\n            }\n\n\n            if (direction === 1 || direction === -1) {\n                if (this.options.animationSlide) {\n                    this.slide(0, 100 * direction + 'px');\n                    setTimeout(() => {\n                        this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                    }, 50);\n                }\n                this.fadeIn(this.domNodes.image, this.options.fadeSpeed, () => {\n                    this.isAnimating = false;\n                    this.setCaption(captionText, imageWidth);\n                });\n\n            } else {\n                this.isAnimating = false;\n                this.setCaption(captionText, imageWidth);\n            }\n\n            if (this.options.additionalHtml && !this.domNodes.additionalHtml) {\n                this.domNodes.additionalHtml = document.createElement('div');\n                this.domNodes.additionalHtml.classList.add('sl-additional-html');\n                this.domNodes.additionalHtml.innerHTML = this.options.additionalHtml;\n                this.domNodes.image.appendChild(this.domNodes.additionalHtml);\n            }\n\n            if (this.options.download) {\n                this.domNodes.downloadLink.setAttribute('href', this.currentImage.getAttribute('src'));\n            }\n\n        });\n    }\n\n    zoomPanElement(targetOffsetX, targetOffsetY, targetScale) {\n\n        this.currentImage.style[this.transitionPrefix + 'transform'] = 'translate(' + targetOffsetX + ',' + targetOffsetY + ') scale(' + targetScale + ')';\n\n    };\n\n    minMax(value, min, max) {\n        return (value < min) ? min : (value > max) ? max : value;\n    };\n\n    setZoomData(initialScale, targetOffsetX, targetOffsetY) {\n        this.currentImage.dataset.scale = initialScale;\n        this.currentImage.dataset.translateX = targetOffsetX;\n        this.currentImage.dataset.translateY = targetOffsetY;\n    };\n\n\n    hashchangeHandler() {\n        if (this.isOpen && this.hash === this.initialLocationHash) {\n            this.hashReseted = true;\n            this.close();\n        }\n    }\n\n    addEvents() {\n\n        // resize/responsive\n        this.addEventListener(window, 'resize.' + this.eventNamespace, (event) => {\n            //this.adjustImage.bind(this)\n            if (this.isOpen) {\n                this.adjustImage();\n            }\n        });\n\n        this.addEventListener(this.domNodes.closeButton, ['click.' + this.eventNamespace, 'touchstart.' + this.eventNamespace], this.close.bind(this));\n\n        if (this.options.history) {\n            setTimeout(() => {\n                this.addEventListener(window, 'hashchange.' + this.eventNamespace, (event) => {\n                    if (this.isOpen) {\n                        this.hashchangeHandler();\n                    }\n                });\n            }, 40);\n        }\n\n        this.addEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace, (event) => {\n            if (!event.currentTarget.tagName.match(/button/i)) {\n                return true;\n            }\n\n            event.preventDefault();\n            this.controlCoordinates.swipeDiff = 0;\n            this.loadImage(event.currentTarget.classList.contains('sl-next') ? 1 : -1);\n        });\n\n        if (this.options.scrollZoom) {\n            let scale = 1\n\n            this.addEventListener(this.domNodes.image, ['mousewheel','DOMMouseScroll'], (event) => {\n                if (this.controlCoordinates.mousedown || this.isAnimating || this.isClosing || !this.isOpen) {\n                    return true;\n                }\n                if(this.controlCoordinates.containerHeight == 0) {\n                    this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                    this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                    this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                    this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                    this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                    this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                // event.preventDefault();\n\n                let delta = event.delta || event.wheelDelta;\n                if (delta === undefined) {\n                    //we are on firefox\n                    delta = event.detail;\n                }\n                delta = Math.max(-1,Math.min(1,delta)); // cap the delta to [-1,1] for cross browser consistency\n\n                // apply zoom\n                scale += delta * this.options.scrollZoomFactor * scale;\n                scale = Math.max(1, Math.min( this.options.maxZoom, scale));\n\n                this.controlCoordinates.targetScale = scale;\n\n                let scrollTopPos = document.documentElement.scrollTop || document.body.scrollTop;\n\n                this.controlCoordinates.pinchOffsetX = event.pageX;\n                this.controlCoordinates.pinchOffsetY = event.pageY - scrollTopPos || 0; // need to substract the scroll position\n\n                this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                if (this.controlCoordinates.targetScale > 1) {\n                    this.controlCoordinates.zoomed = true;\n                    if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                        this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                    }\n                } else {\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                }\n\n                this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n\n                this.setZoomData(this.controlCoordinates.targetScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            });\n        }\n\n        this.addEventListener(this.domNodes.image, ['touchstart.' + this.eventNamespace, 'mousedown.' + this.eventNamespace], (event) => {\n            if (event.target.tagName === 'A' && event.type === 'touchstart') {\n                return true;\n            }\n\n            if (event.type === 'mousedown') {\n                event.preventDefault();\n                this.controlCoordinates.initialPointerOffsetX = event.clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                this.controlCoordinates.capture = true;\n            } else {\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n                this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n                this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n                this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n                this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n                this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n                if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    if (!this.controlCoordinates.doubleTapped) {\n                        this.controlCoordinates.doubleTapped = true;\n                        setTimeout(() => {\n                            this.controlCoordinates.doubleTapped = false;\n                        }, 300);\n                    } else {\n\n                        this.currentImage.classList.add('sl-transition');\n                        if (!this.controlCoordinates.zoomed) {\n                            this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n\n\n                            if ( (!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n\n                            this.controlCoordinates.zoomed = true;\n                        } else {\n                            this.controlCoordinates.initialScale = 1;\n                            this.setZoomData(this.controlCoordinates.initialScale,0, 0);\n                            this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                            this.controlCoordinates.zoomed = false;\n                        }\n\n                        setTimeout(() => {\n                            if (this.currentImage) {\n                                this.currentImage.classList.remove('sl-transition');\n                            }\n                        }, 200);\n                        return false;\n                    }\n\n                    this.controlCoordinates.initialOffsetX  = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                }\n                else if (this.controlCoordinates.touchCount === 2) /* Pinch */ {\n                    this.controlCoordinates.initialPointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.initialPointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.initialOffsetX = parseFloat(this.currentImage.dataset.translateX);\n                    this.controlCoordinates.initialOffsetY = parseFloat(this.currentImage.dataset.translateY);\n                    this.controlCoordinates.pinchOffsetX = (this.controlCoordinates.initialPointerOffsetX + this.controlCoordinates.initialPointerOffsetX2) / 2;\n                    this.controlCoordinates.pinchOffsetY = (this.controlCoordinates.initialPointerOffsetY + this.controlCoordinates.initialPointerOffsetY2) / 2;\n                    this.controlCoordinates.initialPinchDistance = Math.sqrt(((this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2) * (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialPointerOffsetX2)) + ((this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2) * (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialPointerOffsetY2)));\n                }\n                this.controlCoordinates.capture = true;\n            }\n            if(this.controlCoordinates.mousedown) return true;\n            if (this.transitionCapable) {\n                this.controlCoordinates.imageLeft = parseInt(this.domNodes.image.style.left, 10);\n            }\n            this.controlCoordinates.mousedown = true;\n            this.controlCoordinates.swipeDiff = 0;\n            this.controlCoordinates.swipeYDiff = 0;\n            this.controlCoordinates.swipeStart = event.pageX || event.touches[0].pageX;\n            this.controlCoordinates.swipeYStart = event.pageY || event.touches[0].pageY;\n\n            return false;\n        });\n\n        this.addEventListener(this.domNodes.image, ['touchmove.' + this.eventNamespace, 'mousemove.' + this.eventNamespace, 'MSPointerMove'], (event) => {\n\n\n            if (!this.controlCoordinates.mousedown) {\n                return true;\n            }\n\n            if (event.type === 'touchmove') {\n                if (this.controlCoordinates.capture === false) {\n                    return false;\n                }\n\n                this.controlCoordinates.pointerOffsetX = event.touches[0].clientX;\n                this.controlCoordinates.pointerOffsetY = event.touches[0].clientY;\n                this.controlCoordinates.touchCount = event.touches.length;\n                this.controlCoordinates.touchmoveCount++;\n\n                if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.pointerOffsetX2 = event.touches[1].clientX;\n                    this.controlCoordinates.pointerOffsetY2 = event.touches[1].clientY;\n                    this.controlCoordinates.targetPinchDistance = Math.sqrt(((this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2) * (this.controlCoordinates.pointerOffsetX - this.controlCoordinates.pointerOffsetX2)) + ((this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2) * (this.controlCoordinates.pointerOffsetY - this.controlCoordinates.pointerOffsetY2)));\n                    if (this.controlCoordinates.initialPinchDistance === null) {\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.initialPinchDistance - this.controlCoordinates.targetPinchDistance) >= 1) {\n                        /* Initialize helpers */\n                        this.controlCoordinates.targetScale = this.minMax(this.controlCoordinates.targetPinchDistance / this.controlCoordinates.initialPinchDistance * this.controlCoordinates.initialScale, 1, this.options.maxZoom);\n                        this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                        this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                        this.controlCoordinates.scaleDifference = this.controlCoordinates.targetScale - this.controlCoordinates.initialScale;\n                        this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.initialOffsetX - ((((((this.controlCoordinates.pinchOffsetX - this.controlCoordinates.containerOffsetX) - (this.controlCoordinates.containerWidth / 2)) - this.controlCoordinates.initialOffsetX) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                        this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.initialOffsetY - ((((((this.controlCoordinates.pinchOffsetY - this.controlCoordinates.containerOffsetY) - (this.controlCoordinates.containerHeight / 2)) - this.controlCoordinates.initialOffsetY) / (this.controlCoordinates.targetScale - this.controlCoordinates.scaleDifference))) * this.controlCoordinates.scaleDifference), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                        this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n                        if (this.controlCoordinates.targetScale > 1) {\n                            this.controlCoordinates.zoomed = true;\n                            if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                                this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                            }\n                        }\n\n                        this.controlCoordinates.initialPinchDistance = this.controlCoordinates.targetPinchDistance;\n                        this.controlCoordinates.initialScale = this.controlCoordinates.targetScale;\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                    }\n                } else {\n                    this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n                    this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n                    this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n                    this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n                    this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                        this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                        this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n                    }\n\n                    if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                        this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                        this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n                    }\n\n                    this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n                }\n            }\n\n            /* Mouse Move implementation */\n            if (event.type === 'mousemove' && this.controlCoordinates.mousedown) {\n              if(event.type == 'touchmove') return true;\n\n                event.preventDefault();\n\n              if(this.controlCoordinates.capture === false) return false;\n\n              this.controlCoordinates.pointerOffsetX = event.clientX;\n              this.controlCoordinates.pointerOffsetY = event.clientY;\n\n              this.controlCoordinates.targetScale = this.controlCoordinates.initialScale;\n              this.controlCoordinates.limitOffsetX = ((this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) - this.controlCoordinates.containerWidth) / 2;\n              this.controlCoordinates.limitOffsetY = ((this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) - this.controlCoordinates.containerHeight) / 2;\n              this.controlCoordinates.targetOffsetX = (this.controlCoordinates.imgWidth * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerWidth ? 0 : this.minMax(this.controlCoordinates.pointerOffsetX - (this.controlCoordinates.initialPointerOffsetX - this.controlCoordinates.initialOffsetX), this.controlCoordinates.limitOffsetX * (-1), this.controlCoordinates.limitOffsetX);\n              this.controlCoordinates.targetOffsetY = (this.controlCoordinates.imgHeight * this.controlCoordinates.targetScale) <= this.controlCoordinates.containerHeight ? 0 : this.minMax(this.controlCoordinates.pointerOffsetY - (this.controlCoordinates.initialPointerOffsetY - this.controlCoordinates.initialOffsetY), this.controlCoordinates.limitOffsetY * (-1), this.controlCoordinates.limitOffsetY);\n\n              if (Math.abs(this.controlCoordinates.targetOffsetX) === Math.abs(this.controlCoordinates.limitOffsetX)) {\n                  this.controlCoordinates.initialOffsetX = this.controlCoordinates.targetOffsetX;\n                  this.controlCoordinates.initialPointerOffsetX = this.controlCoordinates.pointerOffsetX;\n              }\n\n              if (Math.abs(this.controlCoordinates.targetOffsetY) === Math.abs(this.controlCoordinates.limitOffsetY)) {\n                  this.controlCoordinates.initialOffsetY = this.controlCoordinates.targetOffsetY;\n                  this.controlCoordinates.initialPointerOffsetY = this.controlCoordinates.pointerOffsetY;\n              }\n\n              this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n              this.zoomPanElement(this.controlCoordinates.targetOffsetX + \"px\", this.controlCoordinates.targetOffsetY + \"px\", this.controlCoordinates.targetScale);\n\n            }\n\n            if (!this.controlCoordinates.zoomed) {\n\n                this.controlCoordinates.swipeEnd = event.pageX || event.touches[0].pageX;\n                this.controlCoordinates.swipeYEnd = event.pageY || event.touches[0].pageY;\n                this.controlCoordinates.swipeDiff = this.controlCoordinates.swipeStart - this.controlCoordinates.swipeEnd;\n                this.controlCoordinates.swipeYDiff = this.controlCoordinates.swipeYStart - this.controlCoordinates.swipeYEnd;\n                if (this.options.animationSlide) {\n                    this.slide(0, -this.controlCoordinates.swipeDiff + 'px');\n                }\n            }\n\n        });\n\n\n        this.addEventListener(this.domNodes.image, ['touchend.' + this.eventNamespace, 'mouseup.' + this.eventNamespace, 'touchcancel.' + this.eventNamespace, 'mouseleave.' + this.eventNamespace, 'pointerup', 'pointercancel', 'MSPointerUp', 'MSPointerCancel'], (event) => {\n\n\n            if (this.isTouchDevice && event.type === 'touchend') {\n                this.controlCoordinates.touchCount = event.touches.length;\n                if (this.controlCoordinates.touchCount === 0) /* No touch */ {\n                    /* Set attributes */\n                    if (this.currentImage) {\n                        this.setZoomData(this.controlCoordinates.initialScale, this.controlCoordinates.targetOffsetX, this.controlCoordinates.targetOffsetY);\n                    }\n                    if (this.controlCoordinates.initialScale === 1) {\n                        this.controlCoordinates.zoomed = false;\n                        if (this.domNodes.caption.style.display === 'none') {\n                            this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                        }\n                    }\n                    this.controlCoordinates.initialPinchDistance = null;\n                    this.controlCoordinates.capture = false;\n                } else if (this.controlCoordinates.touchCount === 1) /* Single touch */ {\n                    this.controlCoordinates.initialPointerOffsetX = event.touches[0].clientX;\n                    this.controlCoordinates.initialPointerOffsetY = event.touches[0].clientY;\n                } else if (this.controlCoordinates.touchCount > 1) /* Pinch */ {\n                    this.controlCoordinates.initialPinchDistance = null;\n                }\n            }\n\n\n            if (this.controlCoordinates.mousedown) {\n                this.controlCoordinates.mousedown = false;\n                let possibleDir = true;\n                if (!this.options.loop) {\n                    if (this.currentImageIndex === 0 && this.controlCoordinates.swipeDiff < 0) {\n                        possibleDir = false;\n                    }\n                    if (this.currentImageIndex >= this.relatedElements.length - 1 && this.controlCoordinates.swipeDiff > 0) {\n                        possibleDir = false;\n                    }\n                }\n                if (Math.abs(this.controlCoordinates.swipeDiff) > this.options.swipeTolerance && possibleDir) {\n                    this.loadImage(this.controlCoordinates.swipeDiff > 0 ? 1 : -1);\n                }\n                else if (this.options.animationSlide) {\n                    this.slide(this.options.animationSpeed / 1000, 0 + 'px');\n                }\n\n                if (this.options.swipeClose && Math.abs(this.controlCoordinates.swipeYDiff) > 50 && Math.abs(this.controlCoordinates.swipeDiff) < this.options.swipeTolerance) {\n                    this.close();\n                }\n            }\n        });\n\n        this.addEventListener(this.domNodes.image, ['dblclick'], (event) => {\n            if(this.isTouchDevice) return;\n            this.controlCoordinates.initialPointerOffsetX = event.clientX;\n            this.controlCoordinates.initialPointerOffsetY = event.clientY;\n            this.controlCoordinates.containerHeight = this.getDimensions(this.domNodes.image).height;\n            this.controlCoordinates.containerWidth = this.getDimensions(this.domNodes.image).width;\n            this.controlCoordinates.imgHeight = this.getDimensions(this.currentImage).height;\n            this.controlCoordinates.imgWidth = this.getDimensions(this.currentImage).width;\n            this.controlCoordinates.containerOffsetX = this.domNodes.image.offsetLeft;\n            this.controlCoordinates.containerOffsetY = this.domNodes.image.offsetTop;\n\n            this.currentImage.classList.add('sl-transition');\n\n            if(!this.controlCoordinates.zoomed) {\n                this.controlCoordinates.initialScale = this.options.doubleTapZoom;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                if ((!this.domNodes.caption.style.opacity || this.domNodes.caption.style.opacity > 0) && this.domNodes.caption.style.display !== 'none') {\n                    this.fadeOut(this.domNodes.caption, this.options.fadeSpeed);\n                }\n                this.controlCoordinates.zoomed = true;\n            } else {\n                this.controlCoordinates.initialScale = 1;\n                this.setZoomData(this.controlCoordinates.initialScale, 0, 0);\n                this.zoomPanElement(0 + \"px\", 0 + \"px\", this.controlCoordinates.initialScale);\n                this.controlCoordinates.zoomed = false;\n                if (this.domNodes.caption.style.display === 'none') {\n                    this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n                }\n\n            }\n            setTimeout(() => {\n                if (this.currentImage) {\n                    this.currentImage.classList.remove('sl-transition');\n                    this.currentImage.style[this.transitionPrefix + 'transform-origin'] = null;\n                }\n            }, 200);\n\n            this.controlCoordinates.capture = true;\n            return false;\n        });\n\n    }\n\n    getDimensions(element) {\n        let styles = window.getComputedStyle(element),\n            height = element.offsetHeight,\n            width = element.offsetWidth,\n            borderTopWidth = parseFloat(styles.borderTopWidth),\n            borderBottomWidth = parseFloat(styles.borderBottomWidth),\n            paddingTop = parseFloat(styles.paddingTop),\n            paddingBottom = parseFloat(styles.paddingBottom),\n            borderLeftWidth = parseFloat(styles.borderLeftWidth),\n            borderRightWidth = parseFloat(styles.borderRightWidth),\n            paddingLeft = parseFloat(styles.paddingLeft),\n            paddingRight = parseFloat(styles.paddingRight);\n        return {\n            height: height - borderBottomWidth - borderTopWidth - paddingTop - paddingBottom,\n            width: width - borderLeftWidth - borderRightWidth - paddingLeft - paddingRight\n        };\n    }\n\n    updateHash() {\n        let newHash = 'pid=' + (this.currentImageIndex + 1),\n            newURL = window.location.href.split('#')[0] + '#' + newHash;\n\n        this.hashReseted = false;\n\n        if (this.pushStateSupport) {\n            window.history[this.historyHasChanges ? 'replaceState' : 'pushState']('', document.title, newURL);\n        } else {\n            // what is the browser target of this?\n            if (this.historyHasChanges) {\n                window.location.replace(newURL);\n            } else {\n                window.location.hash = newHash;\n            }\n        }\n        if(!this.historyHasChanges) {\n            this.urlChangedOnce = true;\n        }\n\n        this.historyHasChanges = true;\n    }\n\n    resetHash() {\n        this.hashReseted = true;\n        if(this.urlChangedOnce) {\n            history.back();\n        } else {\n            if (this.pushStateSupport) {\n                history.pushState('', document.title, window.location.pathname + window.location.search);\n            } else {\n                window.location.hash = '';\n            }\n        }\n        //\n        //in case an history operation is still pending\n        clearTimeout(this.historyUpdateTimeout);\n    }\n\n    updateURL() {\n        clearTimeout(this.historyUpdateTimeout);\n        if (!this.historyHasChanges) {\n            this.updateHash(); // first time\n        } else {\n            this.historyUpdateTimeout = setTimeout(this.updateHash.bind(this), 800);\n        }\n    }\n\n    setCaption(captionText, imageWidth) {\n        if (this.options.captions && captionText && captionText !== '' && typeof captionText !== \"undefined\") {\n            this.hide(this.domNodes.caption);\n            this.domNodes.caption.style.width = imageWidth + 'px';\n            this.domNodes.caption.innerHTML = captionText;\n\n            this.domNodes.image.appendChild(this.domNodes.caption);\n\n            setTimeout(() => {\n                this.fadeIn(this.domNodes.caption, this.options.fadeSpeed);\n            }, this.options.captionDelay);\n        }\n    }\n\n    slide(speed, pos) {\n        if (!this.transitionCapable) {\n            return this.domNodes.image.style.left = pos;\n        }\n\n        this.domNodes.image.style[this.transitionPrefix + 'transform'] = 'translateX(' + pos + ')';\n        this.domNodes.image.style[this.transitionPrefix + 'transition'] = this.transitionPrefix + 'transform ' + speed + 's linear';\n    }\n\n    getRelated(rel) {\n        let elems;\n        if (rel && rel !== false && rel !== 'nofollow') {\n            elems = Array.from(this.elements).filter(element => element.getAttribute('rel') === rel);\n        } else {\n            elems = this.elements;\n        }\n        return elems;\n    }\n\n    openImage(element) {\n        element.dispatchEvent(new Event('show.' + this.eventNamespace));\n\n        this.globalScrollbarWidth = this.getScrollbarWidth();\n        if (this.options.disableScroll) {\n            this.toggleScrollbar('hide');\n            this.globalScrollbarWidth = 0;\n        }\n\n        if (this.options.htmlClass && this.options.htmlClass !== '') {\n            document.querySelector('html').classList.add(this.options.htmlClass);\n        }\n\n        document.body.appendChild(this.domNodes.wrapper);\n\n        this.domNodes.wrapper.appendChild(this.domNodes.image);\n        if (this.options.overlay) {\n            document.body.appendChild(this.domNodes.overlay);\n        }\n\n        this.relatedElements = this.getRelated(element.rel);\n\n        if (this.options.showCounter) {\n            if (this.relatedElements.length == 1 && this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.removeChild(this.domNodes.counter);\n            } else if(this.relatedElements.length > 1 && !this.domNodes.wrapper.contains(this.domNodes.counter)) {\n                this.domNodes.wrapper.appendChild(this.domNodes.counter);\n            }\n        }\n\n        if (this.options.download && this.domNodes.download) {\n            this.domNodes.wrapper.appendChild(this.domNodes.download);\n        }\n\n        this.isAnimating = true;\n\n        this.currentImageIndex = this.relatedElements.indexOf(element);\n\n        let targetURL = element.getAttribute(this.options.sourceAttr);\n\n        this.currentImage = document.createElement('img');\n        this.currentImage.style.display = 'none';\n        this.currentImage.setAttribute('src', targetURL);\n        this.currentImage.dataset.scale = 1;\n        this.currentImage.dataset.translateX = 0;\n        this.currentImage.dataset.translateY = 0;\n\n        if (this.loadedImages.indexOf(targetURL) === -1) {\n            this.loadedImages.push(targetURL);\n        }\n\n        this.domNodes.image.innerHTML = '';\n        this.domNodes.image.setAttribute('style', '');\n\n        this.domNodes.image.appendChild(this.currentImage);\n\n\n        this.fadeIn(this.domNodes.overlay, this.options.fadeSpeed);\n        this.fadeIn([this.domNodes.counter, this.domNodes.navigation, this.domNodes.closeButton, this.domNodes.download], this.options.fadeSpeed);\n\n        this.show(this.domNodes.spinner);\n        this.domNodes.counter.querySelector('.sl-current').innerHTML = this.currentImageIndex + 1;\n        this.domNodes.counter.querySelector('.sl-total').innerHTML = this.relatedElements.length;\n\n        this.adjustImage();\n        if (this.options.preloading) {\n            this.preload();\n        }\n\n        setTimeout(() => {\n            element.dispatchEvent(new Event('shown.' + this.eventNamespace));\n        }, this.options.animationSpeed);\n    }\n\n    forceFocus() {\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.addEventListener(document, 'focusin.' + this.eventNamespace, event => {\n            if (document !== event.target &&\n                this.domNodes.wrapper !== event.target &&\n                !this.domNodes.wrapper.contains(event.target)) {\n                this.domNodes.wrapper.focus();\n            }\n        });\n    }\n\n    // utility\n    addEventListener(elements, events, callback, opts) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n\n        for (let element of elements) {\n            if (!element.namespaces) {\n                element.namespaces = {};\n            } // save the namespaces addEventListener the DOM element itself\n\n            for (let event of events) {\n                let options = opts || false;\n                let needsPassiveFix = ['touchstart', 'touchmove','mousewheel','DOMMouseScroll'].indexOf(event.split('.')[0]) >= 0;\n                if (needsPassiveFix && this.isPassiveEventsSupported) {\n                    if (typeof options === 'object') {\n                        options.passive = true;\n                    } else {\n                        options = {passive: true};\n                    }\n                }\n\n                element.namespaces[event] = callback;\n                element.addEventListener(event.split('.')[0], callback, options);\n            }\n        }\n    }\n\n    removeEventListener(elements, events) {\n        elements = this.wrap(elements);\n        events = this.wrap(events);\n        for (let element of elements) {\n            for (let event of events) {\n                if(element.namespaces && element.namespaces[event]) {\n                    element.removeEventListener(event.split('.')[0], element.namespaces[event]);\n                    delete element.namespaces[event];\n                }\n            }\n        }\n    }\n\n    fadeOut(elements, duration, callback) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.opacity = parseFloat(element) || window.getComputedStyle(element).getPropertyValue(\"opacity\");\n        }\n\n        this.isFadeIn = false;\n\n        let step = 16.66666 / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if ((currentOpacity -= step) < 0) {\n                    for (let element of elements) {\n                        element.style.display = \"none\";\n                        // element.style.opacity = '';\n                        element.style.opacity = 1;\n                    }\n                    callback && callback.call(this, elements);\n                } else {\n                    for (let element of elements) {\n                        element.style.opacity = currentOpacity;\n                    }\n                    requestAnimationFrame(fade);\n                }\n            };\n\n        fade();\n    }\n\n    fadeIn(elements, duration, callback, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element) {\n                element.style.opacity = 0;\n                element.style.display = display || \"block\";\n            }\n        }\n\n        this.isFadeIn = true;\n\n        let opacityTarget = parseFloat(elements[0].dataset.opacityTarget || 1),\n            step = (16.66666 * opacityTarget) / (duration || this.options.fadeSpeed),\n            fade = () => {\n                let currentOpacity = parseFloat(elements[0].style.opacity);\n                if (!((currentOpacity += step) > opacityTarget)) {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = currentOpacity;\n                        }\n                    }\n                    if(!this.isFadeIn) return;\n                    requestAnimationFrame(fade);\n                } else {\n                    for (let element of elements) {\n                        if(element) {\n                            element.style.opacity = opacityTarget;\n                        }\n                    }\n                    callback && callback.call(this, elements);\n                }\n            };\n\n        fade();\n    }\n\n    hide(elements) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            if(element.style.display != 'none') {\n                element.dataset.initialDisplay = element.style.display;\n            }\n            element.style.display = 'none';\n        }\n    }\n\n    show(elements, display) {\n        elements = this.wrap(elements);\n        for (let element of elements) {\n            element.style.display = element.dataset.initialDisplay || display || 'block';\n        }\n    }\n\n    wrap(input) {\n        return typeof input[Symbol.iterator] === 'function' && typeof input !== 'string' ? input : [input];\n    }\n\n    on(events, callback) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            if (!element.fullyNamespacedEvents) {\n                element.fullyNamespacedEvents = {};\n            }\n            for (let event of events) {\n                element.fullyNamespacedEvents[event] = callback;\n                element.addEventListener(event, callback);\n            }\n        }\n        return this;\n    }\n\n    off(events) {\n        events = this.wrap(events);\n        for (let element of this.elements) {\n            for (let event of events) {\n                if (typeof element.fullyNamespacedEvents !== 'undefined' && event in element.fullyNamespacedEvents) {\n                    element.removeEventListener(event, element.fullyNamespacedEvents[event]);\n                }\n            }\n        }\n        return this;\n    }\n\n    // api\n\n    open(elem, position = 0) {\n        elem = elem || this.elements[0];\n        if(typeof jQuery !== \"undefined\" && elem instanceof jQuery) {\n            elem = elem.get(0);\n        }\n        if(position > 0) {\n            elem = this.elements[position];\n        }\n        this.initialImageIndex = this.elements.indexOf(elem);\n        if(this.initialImageIndex > -1) {\n            this.openImage(elem);\n        }\n    }\n\n    openPosition(position) {\n        let elem = this.elements[position];\n        this.open(elem, position)\n    }\n    next() {\n        this.loadImage(1);\n    }\n\n    prev() {\n        this.loadImage(-1);\n    }\n\n    // get some useful data\n    getLighboxData() {\n        return {\n            currentImageIndex: this.currentImageIndex,\n            currentImage: this.currentImage,\n            globalScrollbarWidth: this.globalScrollbarWidth\n        };\n    }\n\n    //close is exposed anyways..\n\n    destroy() {\n        //remove all custom event listeners from elements\n        this.off([\n            'close.' + this.eventNamespace,\n            'closed.' + this.eventNamespace,\n            'nextImageLoaded.' + this.eventNamespace,\n            'prevImageLoaded.' + this.eventNamespace,\n            'change.' + this.eventNamespace,\n            'nextDone.' + this.eventNamespace,\n            'prevDone.' + this.eventNamespace,\n            'error.' + this.eventNamespace,\n            'changed.' + this.eventNamespace,\n            'next.' + this.eventNamespace,\n            'prev.' + this.eventNamespace,\n            'show.' + this.eventNamespace,\n            'shown.' + this.eventNamespace\n        ]);\n\n        this.removeEventListener(this.elements, 'click.' + this.eventNamespace);\n        this.removeEventListener(document, 'focusin.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'contextmenu.' + this.eventNamespace);\n        this.removeEventListener(document.body, 'keyup.' + this.eventNamespace);\n\n        this.removeEventListener(this.domNodes.navigation.getElementsByTagName('button'), 'click.' + this.eventNamespace);\n        this.removeEventListener(this.domNodes.closeButton, 'click.' + this.eventNamespace);\n        this.removeEventListener(window, 'resize.' + this.eventNamespace);\n        this.removeEventListener(window, 'hashchange.' + this.eventNamespace);\n\n        this.close();\n        if (this.isOpen) {\n            document.body.removeChild(this.domNodes.wrapper);\n            document.body.removeChild(this.domNodes.overlay);\n        }\n\n        this.elements = null;\n    }\n\n    refresh() {\n        if (!this.initialSelector) {\n            throw 'refreshing only works when you initialize using a selector!';\n        }\n\n        let options = this.options,\n            selector = this.initialSelector;\n\n        this.destroy();\n\n        this.constructor(selector, options);\n\n        return this;\n    }\n}\nexport default SimpleLightbox;\n\nglobal.SimpleLightbox = SimpleLightbox;\n"],"names":["$5c8792bdb860ecb2$var$SimpleLightbox","defaultOptions","sourceAttr","overlay","overlayOpacity","spinner","nav","navText","captions","captionDelay","captionSelector","captionType","captionsData","captionPosition","captionClass","close","closeText","swipeClose","showCounter","fileExt","animationSlide","animationSpeed","preloading","enableKeyboard","loop","rel","docClose","swipeTolerance","className","widthRatio","heightRatio","scaleImageToRatio","disableRightClick","disableScroll","alertError","alertErrorMessage","additionalHtml","history","throttleInterval","doubleTapZoom","maxZoom","htmlClass","rtl","fixedClass","fadeSpeed","uniqueImages","focus","scrollZoom","scrollZoomFactor","download","transitionPrefix","isPassiveEventsSupported","transitionCapable","isTouchDevice","window","isAppleDevice","test","navigator","platform","initialLocationHash","pushStateSupport","isOpen","isAnimating","isClosing","isFadeIn","urlChangedOnce","hashReseted","historyHasChanges","historyUpdateTimeout","currentImage","eventNamespace","domNodes","loadedImages","initialImageIndex","currentImageIndex","initialSelector","globalScrollbarWidth","controlCoordinates","swipeDiff","swipeYDiff","swipeStart","swipeEnd","swipeYStart","swipeYEnd","mousedown","imageLeft","zoomed","containerHeight","containerWidth","containerOffsetX","containerOffsetY","imgHeight","imgWidth","capture","initialOffsetX","initialOffsetY","initialPointerOffsetX","initialPointerOffsetY","initialPointerOffsetX2","initialPointerOffsetY2","initialScale","initialPinchDistance","pointerOffsetX","pointerOffsetY","pointerOffsetX2","pointerOffsetY2","targetOffsetX","targetOffsetY","targetScale","pinchOffsetX","pinchOffsetY","limitOffsetX","limitOffsetY","scaleDifference","targetPinchDistance","touchCount","doubleTapped","touchmoveCount","constructor","elements","options","this","Object","assign","checkPassiveEventsSupport","Array","from","document","querySelectorAll","length","relatedElements","calculateTransitionPrefix","hash","getRelated","imgArr","filter","element","src","getAttribute","indexOf","push","createDomNodes","wrapper","appendChild","closeButton","navigation","addEventListener","event","isValidLink","currentTarget","preventDefault","openImage","target","body","parentElement","classList","contains","throttle","key","setAttribute","loadImage","addEvents","supportsPassive","opts","defineProperty","get","removeEventListener","e","getCaptionElement","elem","startsWith","selector","replace","trimStart","sibling","nextElementSibling","matches","querySelector","generateQuerySelector","tagName","id","parentNode","str","classes","trim","split","i","childIndex","previousElementSibling","createElement","add","dataset","opacityTarget","innerHTML","counter","downloadLink","textContent","caption","captionClasses","image","func","limit","inThrottle","apply","arguments","setTimeout","RegExp","s","documentElement","style","getScrollbarWidth","scrollbarWidth","scrollDiv","offsetWidth","clientWidth","removeChild","toggleScrollbar","type","fixedElements","slice","call","fullWindowWidth","innerWidth","documentElementRect","getBoundingClientRect","right","Math","abs","left","paddingRight","parseInt","getComputedStyle","originalPaddingRight","forEach","actualPadding","calculatedPadding","parseFloat","remove","padding","dispatchEvent","Event","resetHash","fadeOut","minMax","location","substring","preload","index","next","prev","nextImage","Image","prevImage","direction","slideDirection","newIndex","slide","show","adjustImage","tmpImage","windowWidth","windowHeight","innerHeight","scale","translateX","translateY","zoomPanElement","display","dirIsDefined","alert","updateURL","captionContainer","captionText","imageWidth","width","imageHeight","height","ratio","top","forceFocus","fadeIn","hide","setCaption","value","min","max","setZoomData","hashchangeHandler","bind","getElementsByTagName","match","getDimensions","offsetLeft","offsetTop","delta","wheelDelta","undefined","detail","scrollTopPos","scrollTop","pageX","pageY","opacity","clientX","clientY","touches","sqrt","possibleDir","styles","offsetHeight","borderTopWidth","borderBottomWidth","paddingTop","paddingBottom","borderLeftWidth","borderRightWidth","paddingLeft","updateHash","newHash","newURL","href","title","back","pushState","pathname","search","clearTimeout","speed","pos","elems","targetURL","events","callback","wrap","namespaces","passive","duration","element1","getPropertyValue","step","fade","currentOpacity","requestAnimationFrame","element2","initialDisplay","input","Symbol","iterator","on","fullyNamespacedEvents","off","open","position","jQuery","openPosition","getLighboxData","destroy","refresh","$parcel$global","SimpleLightbox"],"version":3,"file":"01-gallery.eece216e.js.map"}